/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import dao.ClienteDAO;
import dao.Conexao;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Cliente;
import javax.swing.table.TableRowSorter;


/**
 *
 * @author Victor
 */
public class TelaCliente extends javax.swing.JFrame {

    private final ClienteDAO clienteDAO;
    private DefaultTableModel model;

    /**
     * Creates new form TelaCliente
     */
    public TelaCliente() throws SQLException {
        initComponents();
        this.clienteDAO = new ClienteDAO(new Conexao().getConnection());

        // Configuração do modelo da tabela
        model = (DefaultTableModel) jTableCliente.getModel();
        carregarClientesNaTabela();
        
        // Adiciona classificador para ordenação por ID
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        jTableCliente.setRowSorter(sorter);
        
        // Adiciona um classificador para a coluna de ID (assumindo que ID é a primeira coluna)
        int columnIndexToSort = 0; // Coluna de ID
        sorter.setSortable(columnIndexToSort, true);

        
    }

    private void carregarClientesNaTabela() {
        try {
            ArrayList<Cliente> clientes = clienteDAO.selectAll();
            for (Cliente cliente : clientes) {
                model.addRow(new Object[]{cliente.getId(), cliente.getNome(), cliente.getTelefone(), cliente.getEmail(), cliente.getRg()});
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro ao carregar clientes: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void deletarClientePorId(int id) {
        try {
            Cliente cliente = new Cliente(id);
            cliente.setId(id);
            clienteDAO.delete(cliente);
            JOptionPane.showMessageDialog(this, "Cliente deletado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            limparCamposAtualizacao();
            model.setRowCount(0); // Limpa a tabela antes de recarregar os clientes
            carregarClientesNaTabela();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro ao deletar cliente: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void limparCamposAtualizacao() {
        jTextFieldUpdatePorId.setText("");
        jTextFieldUpdateNome.setText("");
        jTextFieldUpdateTelefone.setText("");
        jTextFieldUpdateEmail.setText("");
        jTextFieldUpdateRg.setText("");

    }

    private void atualizarCliente() {
        try {
            int id = Integer.parseInt(jTextFieldUpdatePorId.getText());
            String nome = jTextFieldUpdateNome.getText();
            String telefone = jTextFieldUpdateTelefone.getText();
            String email = jTextFieldUpdateEmail.getText();
            String rg = jTextFieldUpdateRg.getText();

            Cliente cliente = new Cliente(id, telefone, email, rg, nome);
            clienteDAO.update(cliente);
            JOptionPane.showMessageDialog(this, "Cliente atualizado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            limparCamposAtualizacao();
            model.setRowCount(0); // Limpa a tabela antes de recarregar os clientes
            carregarClientesNaTabela();
        } catch (NumberFormatException | SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro ao atualizar cliente: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jTextFieldIdDeletar = new javax.swing.JTextField();
        jButtonDeletarId = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldUpdatePorId = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldUpdateNome = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldUpdateTelefone = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldUpdateEmail = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldUpdateRg = new javax.swing.JTextField();
        jButtonAtualizarCliente = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCliente = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setText("Id:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, -1, -1));
        getContentPane().add(jTextFieldIdDeletar, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 80, 190, -1));

        jButtonDeletarId.setText("Deletar Cliente");
        jButtonDeletarId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeletarIdActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonDeletarId, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 140, -1, -1));

        jLabel3.setText("Id:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 80, -1, -1));
        getContentPane().add(jTextFieldUpdatePorId, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 80, 160, -1));

        jLabel4.setText("Nome:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 80, -1, -1));
        getContentPane().add(jTextFieldUpdateNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 80, 170, -1));

        jLabel5.setText("Telefone:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 120, -1, -1));
        getContentPane().add(jTextFieldUpdateTelefone, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 120, 150, -1));

        jLabel6.setText("Email:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 120, -1, -1));
        getContentPane().add(jTextFieldUpdateEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 120, 180, -1));

        jLabel7.setText("Rg:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 170, -1, -1));
        getContentPane().add(jTextFieldUpdateRg, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 170, 160, -1));

        jButtonAtualizarCliente.setText("Atualizar Cliente");
        jButtonAtualizarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAtualizarClienteActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonAtualizarCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 170, 140, -1));

        jTableCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "nome", "telefone", "email", "rg"
            }
        ));
        jScrollPane1.setViewportView(jTableCliente);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 280, 1210, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/imagens/AgendaFundo.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAtualizarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAtualizarClienteActionPerformed
        atualizarCliente();
    }//GEN-LAST:event_jButtonAtualizarClienteActionPerformed

    private void jButtonDeletarIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeletarIdActionPerformed
        deletarClientePorId(Integer.parseInt(jTextFieldIdDeletar.getText()));
    }//GEN-LAST:event_jButtonDeletarIdActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new TelaCliente().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(TelaCliente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    public javax.swing.JButton getJButtonDeletarId() {
        return jButtonDeletarId;
    }

    public javax.swing.JButton getJButtonAtualizarCliente() {
        return jButtonAtualizarCliente;
    }

    public javax.swing.JTextField getJTextFieldIdDeletar() {
        return jTextFieldIdDeletar;
    }

    public javax.swing.JTextField getJTextFieldUpdatePorId() {
        return jTextFieldUpdatePorId;
    }

    public javax.swing.JTextField getJTextFieldUpdateNome() {
        return jTextFieldUpdateNome;
    }

    public javax.swing.JTextField getJTextFieldUpdateTelefone() {
        return jTextFieldUpdateTelefone;
    }

    public javax.swing.JTextField getJTextFieldUpdateEmail() {
        return jTextFieldUpdateEmail;
    }

    public javax.swing.JTextField getJTextFieldUpdateRg() {
        return jTextFieldUpdateRg;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAtualizarCliente;
    private javax.swing.JButton jButtonDeletarId;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableCliente;
    private javax.swing.JTextField jTextFieldIdDeletar;
    private javax.swing.JTextField jTextFieldUpdateEmail;
    private javax.swing.JTextField jTextFieldUpdateNome;
    private javax.swing.JTextField jTextFieldUpdatePorId;
    private javax.swing.JTextField jTextFieldUpdateRg;
    private javax.swing.JTextField jTextFieldUpdateTelefone;
    // End of variables declaration//GEN-END:variables
}
